version: '3'

services:
  app:
    build: 
      context: ..
      dockerfile: .devcontainer/Dockerfile.dev
    init: true
    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-host.sock 
      # Update this to wherever you want VS Code to mount the folder of your project
      #- ../..:/workspaces:cached
      # Use a named volume for the source code
      - dev-app:/workspaces
      # Persist VS Code extensions between rebuilds
      #- vscode-extensions:/root/.vscode-server/extensions
      # And/or for VS Code Insiders
      #- vscode-extensions-insiders:/root/.vscode-server-insiders/extensions

    # Overrides default command so things don't shut down after the process ends.
    entrypoint: /usr/local/share/docker-init.sh
    command: sleep infinity 

    networks:
      - dev-app-network
    container_name: dev-app


    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

volumes:
  dev-app:
    external: true
  #vscode-extensions:
  #vscode-extensions-insiders:

# This external network is shared with the main docker-compose.yml config
# Ensures that services started from inside this dev container can all communicate
networks:
  dev-app-network:
    external: true